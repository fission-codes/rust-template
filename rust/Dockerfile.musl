# syntax=docker/dockerfile:1

# AMD64
FROM --platform=$BUILDPLATFORM messense/rust-musl-cross:x86_64-musl as builder-amd64

# ARM64
FROM --platform=$BUILDPLATFORM messense/rust-musl-cross:aarch64-musl as builder-arm64

ARG TARGETARCH
FROM builder-$TARGETARCH as builder
{% if axum %}
RUN apt update && apt install -y protobuf-compiler
{% endif %}
RUN adduser --disabled-password --disabled-login --gecos "" --no-create-home {{project-name}}

RUN cargo init

# touch lib.rs as we combine both
RUN touch src/lib.rs
{% if bench %}
# touch benches as it's part of Cargo.toml
RUN mkdir benches
RUN touch benches/a_benchmark.rs
{% endif %}
# copy cargo.*
COPY Cargo.lock ./Cargo.lock
COPY Cargo.toml ./Cargo.toml

# cache depencies
RUN mkdir .cargo
RUN cargo vendor > .cargo/config
RUN --mount=type=cache,target=$CARGO_HOME/registry \
    --mount=type=cache,target=$CARGO_HOME/.git \
    --mount=type=cache,target={{project-name}}/target,sharing=locked \{% if axum %}
    cargo build --target $CARGO_BUILD_TARGET --bin {{project-name}}-app --release{% else %}
    cargo build --target $CARGO_BUILD_TARGET --release{% endif %}

# copy src
COPY src ./src{% if bench %}
# copy benches
COPY benches ./benches
{% endif %}{% if axum %}
# copy config
COPY config ./config
{% endif %}
# final build for release
RUN rm ./target/$CARGO_BUILD_TARGET/release/deps/*{{crate_name}}*
RUN --mount=type=cache,target=$CARGO_HOME/registry \
    --mount=type=cache,target=$CARGO_HOME/.git \
    --mount=type=cache,target={{project-name}}/target,sharing=locked \{% if axum %}
    cargo build --target $CARGO_BUILD_TARGET --bin {{project-name}}-app --release{% else %}
    cargo build --target $CARGO_BUILD_TARGET --bin {{project-name}} --release{% endif %}
{% if axum %}
RUN musl-strip ./target/$CARGO_BUILD_TARGET/release/{{project-name}}-app
{% else %}
RUN musl-strip ./target/$CARGO_BUILD_TARGET/release/{{project-name}}{% endif %}
RUN mv ./target/$CARGO_BUILD_TARGET/release/{{project-name}}* /usr/local/bin{% if axum %}
RUN mv ./config /etc/config{% endif %}

FROM scratch

ARG backtrace=0
ARG log_level=info

ENV RUST_BACKTRACE=${backtrace} \
    RUST_LOG=${log_level}

COPY --from=builder /usr/local/bin/{{project-name}}* .{% if axum %}
COPY --from=builder /etc/config ./config{% endif %}
COPY --from=builder /etc/passwd /etc/passwd
COPY --from=builder /etc/group /etc/group

USER {{project-name}}:{{project-name}}
{% if axum %}
EXPOSE {{port}}
EXPOSE {{metricsport}}
ENTRYPOINT ["./{{project-name}}-app"]{% else %}ENTRYPOINT ["./{{project-name}}"]{% endif %}
