name: 𝌚 Release

on:
  workflow_dispatch:
    inputs:
      force-publish:
        required: true
        type: boolean
        description: Publish Releases at Anytime

  workflow_run:
    workflows: [ 🧪 Tests and Checks ]
    branches: [main]
    types: [ completed ]

concurrency:
  group: {{ "${{ github.workflow " }}}}-{{ "${{ github.ref " }}}}
  cancel-in-progress: true

jobs:
  release-please:
    runs-on: ubuntu-latest
    if: >
      github.ref == 'refs/heads/main' &&
      github.repository_owner == '{{github-name}}' &&
      github.event.workflow_run.conclusion == 'success'

    outputs:
      release_created: {{ "${{ steps.release.outputs.release_created " }}}}{% if auditable %}
      tag: {{ "${{ steps.release.outputs.tag_name " }}}}{% endif %}

    steps:
      - name: Run release-please
        id: release
        uses: google-github-actions/release-please-action@v3
        with:
          token: {{ "${{ secrets.GITHUB_TOKEN " }}}}
          default-branch: main
          command: manifest
          extra-files: |
            README.md
{% if auditable %}
  # Build auditable (https://github.com/rust-secure-code/cargo-auditable) binaries across os's/target's.
  build-and-release-auditable-bin:
    runs-on: {{ "${{ matrix.os " }}}}
    needs: [ release-please, publish-release ]

    permissions:
      contents: write

    if: {{ "${{ needs.release-please.outputs.release_created " }}|| github.event.inputs.force-publish }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install cargo tools
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-auditable

      - name: Install Cross-Compilation Tools
        uses: taiki-e/setup-cross-toolchain-action@v1
        with:
          target: {{ "${{ matrix.target " }}}}
        if: startsWith(matrix.os, 'ubuntu')  && !contains(matrix.target, '-musl')

      - name: Install cross for Musl
        uses: taiki-e/install-action@cross
        if: contains(matrix.target, '-musl')

      - name: Build Auditable Binary
        uses: actions-rs/cargo@v1
        with:
          command: auditable
          args: build --release

      - name: Upload release binaries
        uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: {{project-name}}
          ref: refs/tags/{{ "${{ needs.release-please.outputs.tag " }}}}
          include: {% if license == "dual" %}LICENSE-MIT,LICENSE-APACHE,README.md{% else %}LICENSE,README.md{% endif %}
          archive: $bin-$tag-$target
          target: {{ "${{ matrix.target " }}}}
          token: {{ "${{ secrets.GITHUB_TOKEN " }}}}
        env:
          CARGO_PROFILE_RELEASE_LTO: true
          CARGO_PROFILE_RELEASE_CODEGEN_UNITS: 1
{% endif %}
  publish-release:
    runs-on: ubuntu-latest
    needs: [ release-please ]

    permissions:
      contents: write

    if: {{ "${{ needs.release-please.outputs.release_created " }}|| github.event.inputs.force-publish }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Cache Project
        uses: Swatinem/rust-cache@v2

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          override: true
          profile: minimal
          toolchain: stable

      - name: Verify Publishing of crate
        uses: katyo/publish-crates@v1
        with:
          dry-run: true

      - name: Cargo Publish to crates.io
        uses: katyo/publish-crates@v1
        with:
          registry-token: {{ "${{ secrets.CARGO_REGISTRY_TOKEN " }}}}
