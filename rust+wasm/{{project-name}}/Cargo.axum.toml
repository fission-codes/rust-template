[package]
name = "{{project-name}}"
version = "0.1.0"
description = "{{description}}"
keywords = []
categories = []{% if license == "Apache" %}
license = "Apache-2.0"
include = ["/src", "README.md", "LICENSE"]
{% elsif license == "MIT" %}
include = ["/src", "README.md", "LICENSE"]
license = "MIT"
{% else %}
include = ["/src", "README.md", "LICENSE-APACHE", "LICENSE-MIT"]
license = "Apache-2.0 or MIT"
{% endif %}readme = "README.md"
edition = "2021"
rust-version = "1.67"
documentation = "https://docs.rs/{{project-name}}"
repository = "https://github.com/{{github-name}}/{{repo-name}}/tree/main/{{project-name}}"
authors = ["{{authors}}"]
default-run = "{{project-name}}-app"

[lib]
path = "src/lib.rs"
doctest = true

[[bin]]
name = "{{project-name}}-app"
path = "src/main.rs"
doc = false

[[bin]]
name = "openapi"
path = "src/bin/openapi.rs"
test = false
doc = false
bench = false

[dependencies]
ansi_term = { version = "0.12", optional = true, default-features = false }
anyhow = { version = "1.0", features = ["backtrace"] }
async-trait = "0.1"
axum = { version = "0.7" }
axum-extra = { version = "0.9", features = ["typed-header"] }
axum-tracing-opentelemetry = { version = "0.19" }
base64 = "0.21"
chrono = { version = "0.4", default-features = false, features = ["clock"] }
config = "0.13"
console-subscriber = { version = "0.1", default-features = false, features = [ "parking_lot" ], optional = true }
const_format = "0.2"
futures = "0.3"
headers = "0.4"
http = "1.1"
http-serde = "2.1"
hyper = "1.0.1"
metrics = "0.20"
metrics-exporter-prometheus = "0.11"
metrics-util = { version = "0.14", default-features = true }
mime = "0.3"
num_cpus = "1.0"
once_cell = "1.14"
openssl = { version = "0.10", features = ["vendored"], default-features = false }
opentelemetry = { version = "0.23" }
opentelemetry-otlp = { version = "0.16", features = ["metrics", "grpc-tonic", "tls-roots", "trace"], default-features = false }
opentelemetry-semantic-conventions = "0.15"
opentelemetry_sdk = { version = "0.23", features = ["rt-tokio", "trace"] }
parking_lot = "0.12"{% if bench %}
proptest = { version = "1.1", optional = true }{% endif %}
reqwest = { version = "0.12", features = ["json"] }
reqwest-middleware = "0.3"
reqwest-retry = "0.6"
reqwest-tracing = { version = "0.5", features = ["opentelemetry_0_23"] }
retry-policies = "0.4"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_path_to_error = "0.1"
serde_with = "3.0"
sysinfo = "0.28"
task-local-extensions = "0.1"
thiserror = "1.0"
time = { version = "0.3", features = ["serde-well-known", "serde-human-readable"] }
tokio = { version = "1.26", features = ["full", "parking_lot"] }
## Tied to opentelemetry-otlp dependency
tonic = { version = "0.11" }
tower = "0.4"
tower-http = { version = "0.5", features = ["catch-panic", "request-id", "sensitive-headers", "timeout", "trace", "util"] }
tracing = "0.1"
tracing-appender = "0.2"
tracing-opentelemetry = "0.24"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json", "parking_lot", "registry"] }
ulid = { version = "1.0", features = ["serde"] }
url = "2.3"
utoipa = { version = "4.2.3", features = ["uuid", "axum_extras"] }
utoipa-swagger-ui = { version = "7.1.0", features = ["axum"] }

[dev-dependencies]
assert-json-diff = "2.0"{% if bench %}
criterion = "0.4"
proptest = "1.1"{% endif %}
rsa = { version = "0.8" }
tokio-test = "0.4"
wiremock = "0.5"

[features]
ansi-logs = ["ansi_term"]
console = ["console-subscriber"]
default = []{% if bench %}
test_utils = ["proptest"]{% endif %}

[package.metadata.docs.rs]
all-features = true
# defines the configuration attribute `docsrs`
rustdoc-args = ["--cfg", "docsrs"]

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(tokio_unstable)'] }
