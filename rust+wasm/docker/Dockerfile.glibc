# syntax=docker/dockerfile:1
ARG RUST_BUILD_IMG=rust:1.65-slim-bullseye
ARG DEBIAN_TAG=bullseye-slim

FROM $RUST_BUILD_IMG as base

# AMD64
FROM --platform=$BUILDPLATFORM base as builder-amd64
ARG TARGET="x86_64-unknown-linux-gnu"

# ARM64
FROM --platform=$BUILDPLATFORM base as builder-arm64
ARG TARGET="aarch64-unknown-linux-gnu"

FROM builder-$TARGETARCH as builder

RUN adduser --disabled-password --disabled-login --gecos "" --no-create-home {{project-name}}
RUN apt update && apt install -y g++{% if axum %} build-essential protobuf-compiler{% endif %}
RUN rustup target add $TARGET

RUN cargo init {{project-name}}

WORKDIR /{{project-name}}

# touch lib.rs as we combine both
Run touch src/lib.rs

# copy cargo.*
COPY ../Cargo.lock ./Cargo.lock
COPY ../{{project-name}}/Cargo.toml ./Cargo.toml

# cache depencies
RUN mkdir .cargo
RUN cargo vendor > .cargo/config
RUN --mount=type=cache,target=$CARGO_HOME/registry \
    --mount=type=cache,target=$CARGO_HOME/.git \
    --mount=type=cache,target={{project-name}}/target,sharing=locked \{% if axum %}
    cargo build --target $TARGET --bin {{project-name}}-app --release{% else %}
    cargo build --target $TARGET --release{% endif %}

# copy src
COPY ../{{project-name}}/src ./src{% if axum %}
# copy config
COPY ../{{project-name}}/config ./config
{% endif %}
# final build for release
RUN rm ./target/$TARGET/release/deps/*{{crate_name}}*
RUN --mount=type=cache,target=$CARGO_HOME/registry \
    --mount=type=cache,target=$CARGO_HOME/.git \
    --mount=type=cache,target={{project-name}}/target,sharing=locked \{% if axum %}
    cargo build --target $TARGET --bin {{project-name}}-app --release{% else %}
    cargo build --target $TARGET --bin {{project-name}} --release{% endif %}
{% if axum %}
RUN strip ./target/$TARGET/release/{{project-name}}-app
{% else %}
RUN strip ./target/$TARGET/release/{{project-name}}{% endif %}
RUN mv ./target/$TARGET/release/{{project-name}}* /usr/local/bin{% if axum %}
RUN mv ./config /etc/config{% endif %}

FROM debian:${DEBIAN_TAG}

ARG backtrace=0
ARG log_level=info

ENV RUST_BACKTRACE=${backtrace} \
    RUST_LOG=${log_level}

COPY --from=builder /usr/local/bin/{{project-name}}* .{% if axum %}
COPY --from=builder /etc/config ./config{% endif %}
COPY --from=builder /etc/passwd /etc/passwd
COPY --from=builder /etc/group /etc/group

USER {{project-name}}:{{project-name}}
{% if axum %}
EXPOSE {{port}}
EXPOSE {{metricsport}}
ENTRYPOINT ["./{{project-name}}-app"]{% else %}ENTRYPOINT ["./{{project-name}}"]{% endif %}
